[{"name":"app.R","content":"library(shiny)\r\nlibrary(pdftools)\r\nlibrary(magick)\r\n\r\n# Define UI for application\r\nui <- fluidPage(\r\n  titlePanel(\"PDF Cropper and Exporter\"),\r\n  \r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      fileInput(\"pdf_file\", \"Choose PDF File\", accept = \".pdf\"),\r\n      numericInput(\"page_num\", \"Page Number\", 1, min = 1),\r\n      numericInput(\"width\", \"Crop Width\", 1210),\r\n      numericInput(\"height\", \"Crop Height\", 1430),\r\n      numericInput(\"x_offset\", \"X Offset\", 150),\r\n      numericInput(\"y_offset\", \"Y Offset\", 280),\r\n      numericInput(\"dpi\", \"Resolution (DPI)\", 300, min = 72, max = 600),\r\n      actionButton(\"crop_button\", \"Crop and Preview\"),\r\n      downloadButton(\"download_button\", \"Download Cropped Image\")\r\n    ),\r\n    \r\n    mainPanel(\r\n      imageOutput(\"cropped_image\", height = \"auto\")\r\n    )\r\n  )\r\n)\r\n\r\n# Define server logic\r\nserver <- function(input, output, session) {\r\n  \r\n  cropped_img <- reactiveVal()\r\n  \r\n  observeEvent(input$crop_button, {\r\n    req(input$pdf_file)\r\n    \r\n    # Read the PDF\r\n    pdf_path <- input$pdf_file$datapath\r\n    num_pages <- pdf_info(pdf_path)$pages\r\n    page_num <- min(max(1, input$page_num), num_pages)\r\n    \r\n    # Render the selected page with specified DPI\r\n    page_image <- pdf_render_page(pdf_path, page = page_num, dpi = input$dpi)\r\n    \r\n    # Convert raw image to magick image\r\n    img <- image_read(page_image)\r\n    \r\n    # Define crop area based on inputs\r\n    crop_area <- geometry_area(width = input$width, height = input$height, x = input$x_offset, y = input$y_offset)\r\n    \r\n    # Crop the image\r\n    cropped_img(image_crop(img, crop_area))\r\n    \r\n    # Add border for preview\r\n    preview_img <- image_border(cropped_img(), color = \"red\", geometry = \"5x5\")\r\n    \r\n    output$cropped_image <- renderImage({\r\n      tmpfile <- tempfile(fileext = \".png\")\r\n      image_write(preview_img, tmpfile, format = \"png\")\r\n      \r\n      list(src = tmpfile, contentType = 'image/png', width = \"100%\", height = \"auto\",\r\n           alt = \"Cropped Image\")\r\n    }, deleteFile = TRUE)\r\n  })\r\n  \r\n  output$download_button <- downloadHandler(\r\n    filename = function() {\r\n      sprintf(\"cropped_page_%d.png\", input$page_num)\r\n    },\r\n    content = function(file) {\r\n      image_write(cropped_img(), file, format = \"png\")\r\n    }\r\n  )\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)","type":"text"}]
